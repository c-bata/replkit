[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "prompt"
description = "Fast terminal key input parser with support for complex sequences"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
keywords = ["terminal", "keyboard", "input", "parser", "prompt"]
authors = [
    { name = "Prompt Key Parser Contributors" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
]
dynamic = ["version"]
dependencies = []

[dependency-groups]
dev = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "maturin>=1.0,<2.0",
]
test = [
    "pytest>=7.0",
    "pytest-benchmark>=4.0",
]

[project.urls]
Homepage = "https://github.com/c-bata/prompt"
Repository = "https://github.com/c-bata/prompt"
Documentation = "https://github.com/c-bata/prompt"

[tool.maturin]
python-source = "prompt"
features = ["pyo3/extension-module"]
# Use uv for installing dependencies during development
uv = true

[tool.pytest.ini_options]
testpaths = ["python_tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
files = ["prompt/**/*.py", "python_tests/**/*.py"]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"python_tests/**/*.py" = ["B011"]